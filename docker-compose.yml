version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.final
    container_name: disaster-monitoring-app
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
      # Groq API Keys - These will be picked up from .env file
      - VALIDATION_API_KEY=${VALIDATION_API_KEY}
      - GROQ_API_KEY_1=${GROQ_API_KEY_1}
      - GROQ_API_KEY_2=${GROQ_API_KEY_2}
      - GROQ_API_KEY_3=${GROQ_API_KEY_3}
      - GROQ_API_KEY_4=${GROQ_API_KEY_4}
    volumes:
      - nltk_data:/usr/local/share/nltk_data
      - app-data:/app/data
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    container_name: disaster-monitoring-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    
  # Optional pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres

volumes:
  postgres-data:
  nltk_data:
  app-data:
  pgadmin-data: