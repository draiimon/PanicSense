FROM node:20-slim AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package.json and install with pnpm
COPY package.json ./
RUN npm install -g pnpm@10.7.1
RUN pnpm install --frozen-lockfile

# Setup production image
FROM base AS builder
WORKDIR /app

# Install Python and development tools
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    python3-dev \
    build-essential \
    gcc \
    g++ \
    libffi-dev \
    libblas-dev \
    liblapack-dev \
    libopenblas-dev \
    && rm -rf /var/lib/apt/lists/*

# Create Python virtual environment
RUN python3 -m venv /venv
ENV PATH="/venv/bin:$PATH"

# Install Python dependencies in separate steps
COPY server/python/requirements.txt ./
RUN pip install --upgrade pip && \
    pip install wheel setuptools cython && \
    pip install scikit-learn==1.3.2 && \
    pip install torch==2.2.0+cpu --extra-index-url https://download.pytorch.org/whl/cpu && \
    pip install -r requirements.txt

# Create NLTK data directory and download data
RUN mkdir -p /usr/local/share/nltk_data
RUN python -c "import nltk; nltk.download('punkt', download_dir='/usr/local/share/nltk_data')"

# Copy node modules and build the application
COPY --from=deps /app/node_modules ./node_modules
COPY . .
ENV NODE_OPTIONS="--max-old-space-size=4096"
RUN npm run build

# Production image, copy all files and run
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production
ENV PORT 5000
ENV NLTK_DATA=/usr/local/share/nltk_data

# Install Python runtime dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    libopenblas0 \
    && rm -rf /var/lib/apt/lists/*

# Copy Python environment and NLTK data
COPY --from=builder /venv /venv
COPY --from=builder /usr/local/share/nltk_data /usr/local/share/nltk_data
ENV PATH="/venv/bin:$PATH"

# Copy built application
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/server/python ./server/python

EXPOSE 5000

CMD ["node", "dist/index.js"]