# Use official Python image with Python 3.11 (not 3.12) as scikit-learn has issues with 3.12
FROM python:3.11-slim AS python-base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    NLTK_DATA=/usr/local/share/nltk_data \
    PATH="/opt/venv/bin:$PATH"

# Install system dependencies - crucial for scikit-learn build
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    g++ \
    python3-dev \
    libopenblas-dev \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set up Python virtual environment
RUN python -m venv /opt/venv && \
    /opt/venv/bin/pip install --upgrade pip setuptools wheel

# Install Python dependencies with fixed versions known to work
WORKDIR /tmp
COPY server/python/requirements.txt .

# Install scikit-learn first, ensuring we have the build environment set correctly
RUN pip install numpy==1.26.4 && \
    pip install scikit-learn==1.3.2 && \
    pip install --extra-index-url https://download.pytorch.org/whl/cpu torch==2.2.0+cpu && \
    pip install -r requirements.txt

# Set up NLTK data
RUN mkdir -p $NLTK_DATA && \
    python -c "import nltk; nltk.download('punkt', download_dir='$NLTK_DATA')"

# Node.js setup
FROM node:20-slim AS node-base

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install pnpm
RUN curl -fsSL https://get.pnpm.io/install.sh | PNPM_VERSION=10.7.1 sh -
ENV PATH="/root/.local/share/pnpm:$PATH"

# Copy package.json and install dependencies
WORKDIR /app
COPY package.json ./
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build the application
ENV NODE_OPTIONS="--max-old-space-size=4096"
RUN NODE_ENV=production pnpm run build

# Final stage
FROM node:20-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    libopenblas0 \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV NODE_ENV=production \
    PORT=5000 \
    PYTHONUNBUFFERED=1 \
    NLTK_DATA=/usr/local/share/nltk_data \
    PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Install pnpm
RUN curl -fsSL https://get.pnpm.io/install.sh | PNPM_VERSION=10.7.1 sh -
ENV PATH="/root/.local/share/pnpm:$PATH"

# Copy built app and dependencies
COPY --from=node-base /app/dist ./dist
COPY --from=node-base /app/node_modules ./node_modules
COPY --from=node-base /app/server/python ./server/python
COPY --from=python-base /opt/venv /opt/venv
COPY --from=python-base /usr/local/share/nltk_data /usr/local/share/nltk_data

# Expose port
EXPOSE 5000

# Start application
CMD ["node", "dist/index.js"]