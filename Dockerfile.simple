# Use an official Debian base image with Python pre-installed
FROM python:3.11-bullseye

# Install Node.js
RUN apt-get update && apt-get install -y \
    curl \
    && curl -sL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
    && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
    && apt-get update && apt-get install -y yarn \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js global dependencies
RUN npm install -g pnpm@10.7.1

# Set working directory
WORKDIR /app

# Copy package.json and install Node.js dependencies
COPY package.json ./
RUN pnpm install

# Copy Python requirements file
COPY server/python/requirements.txt ./server/python/

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install setuptools wheel && \
    # Install scikit-learn separately
    pip install scikit-learn==1.3.2 && \
    # Install PyTorch separately
    pip install torch==2.2.0+cpu --extra-index-url https://download.pytorch.org/whl/cpu && \
    # Install remaining packages
    pip install -r server/python/requirements.txt

# Download NLTK data
RUN python -c "import nltk; nltk.download('punkt')"

# Copy the rest of the application
COPY . .

# Build application
ENV NODE_OPTIONS="--max-old-space-size=4096"
RUN NODE_ENV=production pnpm run build

# Expose the port the app runs on
EXPOSE 5000

# Start the application
CMD ["node", "dist/index.js"]