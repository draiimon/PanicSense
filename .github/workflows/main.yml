name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas nltk scikit-learn torch langdetect tqdm python-dotenv pytz

    - name: Install dependencies
      run: npm ci
      
    - name: Run database migrations
      run: |
        echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/testdb" > .env
        npm run db:push
      
    - name: Check TypeScript compilation
      run: npm run check
      
    - name: Build application
      run: npm run build
      
    - name: Verify build output
      run: |
        ls -la dist/
        ls -la dist/public || echo "No dist/public directory"
        
    - name: Start server for testing
      run: |
        NODE_ENV=test tsx server/index.ts &
        sleep 10 # Wait for server to start
        
    - name: Run tests
      run: |
        node tests/server.test.js

  deploy:
    name: Deploy to Render
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy to Render
      uses: JorgeLNJunior/render-deploy@v1.4.3
      with:
        service_id: ${{ secrets.RENDER_SERVICE_ID }}
        api_key: ${{ secrets.RENDER_API_KEY }}
        clear_cache: true
        wait_deploy: true
        github_token: ${{ secrets.GITHUB_TOKEN }}