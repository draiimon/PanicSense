FROM python:3.11-slim AS python-base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    POETRY_VERSION=1.7.1 \
    POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_CREATE=false \
    NLTK_DATA=/usr/local/share/nltk_data \
    PATH="/root/.local/bin:$PATH"

# Install system dependencies for Python packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    g++ \
    libffi-dev \
    libblas-dev \
    liblapack-dev \
    libopenblas-dev \
    gfortran \
    python3-dev \
    git \
    curl \
    wget \
    pkg-config \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libfreetype6-dev \
    libwebp-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
WORKDIR /python-deps
COPY server/python/requirements.txt .

# Install scikit-learn separately first
RUN pip install --upgrade pip setuptools wheel && \
    pip install cython && \
    pip install scikit-learn==1.3.2 && \
    pip install --no-build-isolation -r requirements.txt

# Create NLTK data directory and download data
RUN mkdir -p $NLTK_DATA && \
    python -c "import nltk; nltk.download('punkt', download_dir='$NLTK_DATA')"

# Node.js stage
FROM node:20-slim AS node-base

# Install necessary tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install pnpm
RUN curl -fsSL https://get.pnpm.io/install.sh | PNPM_VERSION=10.7.1 sh -
ENV PATH="/root/.local/share/pnpm:$PATH"

# Set working directory for the application
WORKDIR /app

# Copy package files and install dependencies
COPY package.json ./

# Install Node.js dependencies
RUN pnpm install --prod --no-optional && \
    pnpm install -D esbuild

# Copy source code
COPY . .

# Build the application
ENV NODE_OPTIONS="--max-old-space-size=4096"
RUN NODE_ENV=production pnpm run build

# Final stage - combine both
FROM node:20-slim

# Install required runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    libopenblas0 \
    libjpeg62-turbo \
    libpng16-16 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV NODE_ENV=production \
    PORT=5000 \
    PYTHONUNBUFFERED=1 \
    NLTK_DATA=/usr/local/share/nltk_data

# Set working directory
WORKDIR /app

# Install pnpm
RUN curl -fsSL https://get.pnpm.io/install.sh | PNPM_VERSION=10.7.1 sh -
ENV PATH="/root/.local/share/pnpm:$PATH"

# Copy built Node.js app
COPY --from=node-base /app/dist ./dist
COPY --from=node-base /app/node_modules ./node_modules

# Copy Python files and dependencies
COPY --from=python-base /usr/local/lib/python3.11 /usr/local/lib/python3.11
COPY --from=python-base /usr/local/bin /usr/local/bin
COPY --from=python-base $NLTK_DATA $NLTK_DATA
COPY --from=node-base /app/server/python ./server/python

# Expose port
EXPOSE 5000

# Run the application
CMD ["node", "dist/index.js"]