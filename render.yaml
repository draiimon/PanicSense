services:
  - type: web
    name: disaster-monitoring-app
    env: docker
    dockerfilePath: ./Dockerfile
    dockerCommand: /app/start.sh
    healthCheckPath: /api/health
    healthCheckTimeout: 5
    numInstances: 1
    plan: starter
    scaling:
      minInstances: 1
      maxInstances: 3
      targetMemoryPercent: 80
      targetCpuPercent: 80
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 5000
      - key: RENDER
        value: true
      - key: NODE_OPTIONS
        value: --max-old-space-size=1536
      - key: DATABASE_URL
        fromDatabase:
          name: disaster-monitoring-db
          property: connectionString
      - key: PYTHON_BINARY
        value: python3
      - key: OPTIMIZE_CACHE
        value: true
      # Groq API Keys - Specify secrets in Render Dashboard
      - key: VALIDATION_API_KEY
        sync: false # Set this manually in the Render dashboard
      - key: GROQ_API_KEY_1
        sync: false # Set this manually in the Render dashboard
      - key: GROQ_API_KEY_2
        sync: false # Set this manually in the Render dashboard
      - key: GROQ_API_KEY_3
        sync: false # Set this manually in the Render dashboard
      - key: GROQ_API_KEY_4
        sync: false # Set this manually in the Render dashboard
    autoDeploy: true
    buildCommand: node scripts/deploy-helper.js && npm run build

databases:
  - name: disaster-monitoring-db
    databaseName: disaster_monitoring
    plan: free
    ipAllowList: 
      - source: 0.0.0.0/0
        description: Allow all traffic