/**
 * Next.js integration for Express server
 * This file replaces the Vite middleware with Next.js handling
 */

import next from 'next';
import { fileURLToPath } from 'url';
import { dirname, resolve } from 'path';
import fs from 'fs';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Helper function for logging with timestamp
export function log(message, source = "express") {
  const formattedTime = new Date().toLocaleTimeString("en-US", {
    hour: "numeric",
    minute: "2-digit",
    second: "2-digit",
    hour12: true,
  });

  console.log(`${formattedTime} [${source}] ${message}`);
}

// Setup Next.js handler for development mode
export async function setupNextDev(app, server) {
  const dev = process.env.NODE_ENV !== 'production';
  const nextApp = next({ 
    dev,
    dir: resolve(__dirname, '..') // Root directory of the project
  });
  const handle = nextApp.getRequestHandler();
  
  await nextApp.prepare();
  
  log('Next.js middleware setup in development mode');
  
  // Let Next.js handle all non-API routes
  app.all('*', (req, res) => {
    if (req.path.startsWith('/api/')) {
      return res.status(404).json({ error: 'API route not found' });
    }
    return handle(req, res);
  });
  
  return nextApp;
}

// Setup static file serving for production mode
export function serveNextStatic(app) {
  // Define possible paths for Next.js output
  const nextDistPath = resolve(__dirname, '../dist/.next');
  const nextPublicPath = resolve(__dirname, '../public');
  const nextExportPath = resolve(__dirname, '../dist/out');
  
  // Check if Next.js build exists
  if (fs.existsSync(nextDistPath)) {
    log(`Found Next.js build at ${nextDistPath}`);
    // Serve static files generated by Next.js
    app.use('/_next', express.static(resolve(nextDistPath, '_next')));
    
    // Serve any files in the public directory
    if (fs.existsSync(nextPublicPath)) {
      app.use(express.static(nextPublicPath));
    }
    
    // Set up fallback for Next.js pages
    const nextServer = next({
      dev: false,
      dir: resolve(__dirname, '..'),
      conf: { 
        distDir: 'dist/.next',
        outDir: 'dist/out'
      }
    });
    
    const handle = nextServer.getRequestHandler();
    
    // Let Next.js handle all non-API routes
    app.all('*', (req, res) => {
      if (req.path.startsWith('/api/')) {
        return res.status(404).json({ error: 'API route not found' });
      }
      return handle(req, res);
    });
    
    return nextServer;
  } 
  // Check if exported static site exists
  else if (fs.existsSync(nextExportPath)) {
    log(`Found Next.js static export at ${nextExportPath}`);
    app.use(express.static(nextExportPath));
    
    // Fallback to index.html for client-side routing
    app.get('*', (req, res) => {
      if (req.path.startsWith('/api/')) {
        return res.status(404).json({ error: 'API route not found' });
      }
      res.sendFile(resolve(nextExportPath, 'index.html'));
    });
    
    return null;
  }
  // Fallback to display an error page if no Next.js build is found
  else {
    log('WARNING: No Next.js build found, serving error page', 'next');
    
    app.get('*', (req, res) => {
      if (req.path.startsWith('/api/')) {
        return res.status(404).json({ error: 'API route not found' });
      }
      
      res.status(500).send(`
        <!DOCTYPE html>
        <html>
          <head>
            <title>PanicSense - Build Missing</title>
            <style>
              body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; max-width: 650px; margin: 40px auto; padding: 0 20px; line-height: 1.6; }
              h1 { font-size: 24px; color: #e63946; }
              .box { background: #f8f9fa; border: 1px solid #dee2e6; padding: 20px; border-radius: 5px; margin: 20px 0; }
              code { background: #f1f1f1; padding: 2px 4px; border-radius: 3px; font-family: monospace; }
            </style>
          </head>
          <body>
            <h1>PanicSense - Frontend Build Missing</h1>
            <div class="box">
              <p>The server is running, but the frontend build is missing. This usually happens when:</p>
              <ul>
                <li>The Next.js build process has not been run</li>
                <li>The build output directory is incorrect or has been deleted</li>
              </ul>
              <p>To fix this, run: <code>npm run build</code></p>
            </div>
            <p>API endpoints are still available at <code>/api/*</code></p>
          </body>
        </html>
      `);
    });
    
    return null;
  }
}