FROM python:3.11-slim as python-base

# Set Python environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    POETRY_HOME="/opt/poetry" \
    VENV_PATH="/opt/venv"

ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"

FROM python-base as builder-base

# Install essential build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    build-essential \
    python3-dev \
    gcc \
    g++ \
    libopenblas-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js 20.x
RUN curl -sL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g pnpm@10.7.1 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy Python requirements first for better caching
COPY server/python/requirements.txt .

# Create and activate a virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies with increased timeout
RUN pip install --upgrade pip && \
    pip install wheel setuptools && \
    pip install scikit-learn==1.3.2 && \
    pip --default-timeout=100 install -r requirements.txt && \
    python -c "import nltk; nltk.download('punkt')"

# Copy package.json for Node.js dependencies
COPY package.json .

# Install Node.js dependencies
RUN pnpm install --prod --no-optional

# Copy the rest of the application
COPY . .

# Build the application
ENV NODE_OPTIONS="--max-old-space-size=4096"
RUN NODE_ENV=production pnpm run build

# Production stage
FROM python:3.11-slim as production

# Install Node.js
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    libopenblas-base \
    && curl -sL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g pnpm@10.7.1 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy built app, dependencies, and virtual environment from build stage
COPY --from=builder-base /app/dist ./dist
COPY --from=builder-base /app/node_modules ./node_modules
COPY --from=builder-base /app/server/python ./server/python
COPY --from=builder-base /opt/venv /opt/venv
COPY --from=builder-base /root/nltk_data /root/nltk_data

# Set environment variables
ENV PATH="/opt/venv/bin:$PATH" \
    NODE_ENV=production \
    PORT=5000 \
    PYTHONPATH=/opt/venv/lib/python3.11/site-packages \
    NLTK_DATA=/root/nltk_data

# Expose the port
EXPOSE 5000

# Run the application
CMD ["node", "dist/index.js"]